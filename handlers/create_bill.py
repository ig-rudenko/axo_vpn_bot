from magic_filter import F
from aiogram import Router
from aiogram.types import InlineKeyboardButton, CallbackQuery
from aiogram.utils.keyboard import InlineKeyboardBuilder

from sqlalchemy import update

from payment.qiwi_payment import QIWIPayment
from .callback_factories import ConfirmPaymentCallbackFactory as ConfirmPaymentCF
from db import VPNConnection, async_db_session, ActiveBills, User

router = Router()


async def payment_answer(callback: CallbackQuery, data: dict):
    keyboard = InlineKeyboardBuilder()
    keyboard.row(InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∏—Ç—å", url=data["payUrl"]))
    keyboard.row(InlineKeyboardButton(text="üîù –ù–∞–∑–∞–¥", callback_data="start"))

    text = (
        "–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É —á–µ—Ä–µ–∑ –ø–ª–∞—Ç–µ–∂–Ω—É—é —Å–∏—Å—Ç–µ–º—É Qiwi –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 10 –º–∏–Ω—É—Ç!\n\n"
        "–†–µ–∫–≤–∏–∑–∏—Ç—ã –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è –ø–æ <b>–∑–∞—â–∏—â–µ–Ω–Ω—ã–º –ø—Ä–æ—Ç–æ–∫–æ–ª–∞–º</b> –∏ –Ω–µ "
        "–ø–æ–ø–∞–¥—É—Ç –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω –∏ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º.\n–ü–ª–∞—Ç–µ–∂–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –Ω–∞ –∑–∞—â–∏—â–µ–Ω–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–æ—Ü–µ—Å—Å–∏–Ω–≥–∞ "
        '–ø–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—É <a href="https://ru.wikipedia.org/wiki/PCI_DSS">'
        "<b>PCI DSS ‚Äì Payment Card Industry Data Security Standard.</b></a>"
    )

    await callback.message.edit_text(text, reply_markup=keyboard.as_markup())
    await callback.answer()


@router.callback_query(ConfirmPaymentCF.filter(F.type_ == "new"))
async def create_bill_for_new_rent(
    callback: CallbackQuery, callback_data: ConfirmPaymentCF
):
    """
    –°–û–ó–î–ê–ù–ò–ï –§–û–†–ú–´ –û–ü–õ–ê–¢–´ –ù–ê QIWI | –ö–£–ü–ò–¢–¨ –ù–û–í–´–ï –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø
    """

    keyboard = InlineKeyboardBuilder()
    keyboard.add(InlineKeyboardButton(text="üîù –ù–∞–∑–∞–¥", callback_data="start"))

    user = await User.get_or_create(tg_id=callback.from_user.id)

    if not callback_data.server_id:
        await callback.message.edit_text(
            "‚ùóÔ∏è–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ VPN —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è‚ùóÔ∏è",
            reply_markup=keyboard.as_markup(),
        )
        await callback.answer()
        return

    # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–±–æ–¥–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ –≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–º –∫–æ–ª-–≤–µ.
    free_connection = list(
        await VPNConnection.get_free(
            server_id=callback_data.server_id, limit=callback_data.count
        )
    )

    # –ï—Å–ª–∏ –Ω–µ—Ç —Å–≤–æ–±–æ–¥–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ
    if not free_connection:
        await callback.message.edit_text(
            "‚òπÔ∏è –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–∞ –¥–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–π",
            reply_markup=keyboard.as_markup(),
        )
        await callback.answer()
        return
    if len(free_connection) < callback_data.count:
        await callback.message.edit_text(
            f"‚òπÔ∏è –ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–≤–æ–±–æ–¥–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π,"
            f' –æ—Å—Ç–∞–ª–æ—Å—å: "{len(free_connection)}"\n',
            reply_markup=keyboard.as_markup(),
        )
        await callback.answer()
        return

    # –ù–∞ –≤—Ä–µ–º—è –æ–ø–ª–∞—Ç—ã —É–∫–∞–∑–∞–Ω–Ω–æ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∫–æ–ª-–≤–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∑–∞–º–æ—Ä–æ–∑–∏—Ç—å, —á—Ç–æ–±—ã –Ω–µ –∑–∞–Ω—è–ª–∏ –¥—Ä—É–≥–∏–µ
    async with async_db_session() as session:
        await session.execute(
            update(VPNConnection),
            [
                {"id": conn.id, "user_id": user.id, "available": False}
                for conn in free_connection
            ],
        )
        await session.commit()

    # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    user: User = await User.get_or_create(tg_id=callback.from_user.id)

    qiwi_payment = QIWIPayment()
    if data := await qiwi_payment.create_bill(value=callback_data.cost):
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—á–µ—Ç –æ–± –æ–ø–ª–∞—Ç–µ
        await ActiveBills.add(
            bill_id=data["billId"],
            user=user.id,
            available_to=qiwi_payment.available_to,
            type="new",
            rent_month=callback_data.month,
            pay_url=data["payUrl"],
            vpn_connections=free_connection,
        )

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –ø–æ –æ–ø–ª–∞—Ç–µ
        await payment_answer(callback, data)

    else:
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ñ–æ—Ä–º—É –æ–ø–ª–∞—Ç—ã, —Ç–æ–≥–¥–∞ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        async with async_db_session() as session:
            await session.execute(
                update(VPNConnection),
                [
                    {"id": conn.id, "user_id": None, "available": False}
                    for conn in free_connection
                ],
            )
            await session.commit()

        await callback.message.edit_text(
            "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏, –ø—Ä–æ–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è ‚òπÔ∏è",
            reply_markup=keyboard.as_markup(),
        )
        await callback.answer()


@router.callback_query(ConfirmPaymentCF.filter(F.type_ == "extend"))
async def create_bill_for_exist_rent(
    callback: CallbackQuery, callback_data: ConfirmPaymentCF
):
    """
    –°–û–ó–î–ê–ù–ò–ï –§–û–†–ú–´ –û–ü–õ–ê–¢–´ –ù–ê QIWI | –ü–†–û–î–õ–ò–¢–¨ –ê–†–ï–ù–î–£ –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø
    """

    keyboard = InlineKeyboardBuilder()
    keyboard.add(
        InlineKeyboardButton(
            text="üîù –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –ø—Ä–æ—Ñ–∏–ª—å", callback_data=f"show_profile"
        )
    )

    user = await User.get_or_create(tg_id=callback.from_user.id)

    if not callback_data.connection_id:
        await callback.message.edit_text(
            f"‚ùóÔ∏è–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ‚ùóÔ∏è",
            reply_markup=keyboard.as_markup(),
        )
        await callback.answer()
        return

    qiwi_payment = QIWIPayment()
    if data := await qiwi_payment.create_bill(value=callback_data.cost):
        # –î–æ–±–∞–≤–ª—è–µ–º —Å—á–µ—Ç –æ–± –æ–ø–ª–∞—Ç–µ
        await ActiveBills.add(
            bill_id=data["billId"],
            user=user.id,
            available_to=qiwi_payment.available_to,
            type="extend",
            rent_month=callback_data.month,
            pay_url=data["payUrl"],
            vpn_connections=[await VPNConnection.get(id=callback_data.connection_id)],
        )

        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –ø–æ –æ–ø–ª–∞—Ç–µ
        await payment_answer(callback, data)

    else:
        # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ñ–æ—Ä–º—É –æ–ø–ª–∞—Ç—ã, —Ç–æ–≥–¥–∞ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        # await unpause_devs(user_devs_ids)
        await callback.message.edit_text(
            "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏, –ø—Ä–æ–Ω–æ—Å–∏–º —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è ‚òπÔ∏è",
            reply_markup=keyboard.as_markup(),
        )
        await callback.answer()
